# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `railties` gem.
# Please instead update this file by running `bin/tapioca gem railties`.


# source://railties//lib/rails/gem_version.rb#3
module Rails
  extend ::ActiveSupport::Autoload
  extend ::ActiveSupport::Benchmarkable

  class << self
    # source://railties//lib/rails.rb#44
    def app_class; end

    # source://railties//lib/rails.rb#44
    def app_class=(_arg0); end

    # source://railties//lib/rails.rb#45
    def application; end

    # source://railties//lib/rails.rb#43
    def application=(_arg0); end

    # source://railties//lib/rails.rb#126
    def autoloaders; end

    # source://railties//lib/rails.rb#56
    def backtrace_cleaner; end

    # source://railties//lib/rails.rb#44
    def cache; end

    # source://railties//lib/rails.rb#44
    def cache=(_arg0); end

    # source://railties//lib/rails.rb#52
    def configuration; end

    # source://railties//lib/rails/deprecator.rb#4
    def deprecator; end

    # source://railties//lib/rails.rb#75
    def env; end

    # source://railties//lib/rails.rb#82
    def env=(environment); end

    # source://railties//lib/rails.rb#93
    def error; end

    # source://railties//lib/rails/gem_version.rb#5
    def gem_version; end

    # source://railties//lib/rails.rb#106
    def groups(*groups); end

    # source://railties//lib/rails.rb#49
    def initialize!(*_arg0, **_arg1, &_arg2); end

    # source://railties//lib/rails.rb#49
    def initialized?(*_arg0, **_arg1, &_arg2); end

    # source://railties//lib/rails.rb#44
    def logger; end

    # source://railties//lib/rails.rb#44
    def logger=(_arg0); end

    # source://railties//lib/rails.rb#122
    def public_path; end

    # source://railties//lib/rails.rb#65
    def root; end

    # source://railties//lib/rails/version.rb#7
    def version; end
  end
end

# source://railties//lib/rails/application.rb#61
class Rails::Application < ::Rails::Engine
  # source://railties//lib/rails/application.rb#108
  def initialize(initial_variable_values = T.unsafe(nil), &block); end

  # source://railties//lib/rails/application.rb#99
  def assets; end

  # source://railties//lib/rails/application.rb#99
  def assets=(_arg0); end

  # source://railties//lib/rails/application.rb#101
  def autoloaders; end

  # source://railties//lib/rails/engine.rb#516
  def build_middleware_stack; end

  # source://railties//lib/rails/application.rb#446
  def config; end

  # source://railties//lib/rails/application.rb#450
  def config=(_arg0); end

  # source://railties//lib/rails/application.rb#283
  def config_for(name, env: T.unsafe(nil)); end

  # source://railties//lib/rails/application.rb#366
  def console(&blk); end

  # source://railties//lib/rails/application.rb#487
  def credentials; end

  # source://railties//lib/rails/application.rb#451
  def credentials=(_arg0); end

  # source://railties//lib/rails/application.rb#103
  def default_url_options(*_arg0, **_arg1, &_arg2); end

  # source://railties//lib/rails/application.rb#103
  def default_url_options=(arg); end

  # source://railties//lib/rails/application.rb#239
  def deprecators; end

  # source://railties//lib/rails/application.rb#545
  def eager_load!; end

  # source://railties//lib/rails/application.rb#506
  def encrypted(path, key_path: T.unsafe(nil), env_key: T.unsafe(nil)); end

  # source://railties//lib/rails/application.rb#312
  def env_config; end

  # source://railties//lib/rails/application.rb#101
  def executor; end

  # source://railties//lib/rails/application.rb#372
  def generators(&blk); end

  # source://railties//lib/rails/application.rb#519
  def helpers_paths; end

  # source://railties//lib/rails/application.rb#433
  def initialize!(group = T.unsafe(nil)); end

  # source://railties//lib/rails/application.rb#133
  def initialized?; end

  # source://railties//lib/rails/application.rb#354
  def initializer(name, opts = T.unsafe(nil), &block); end

  # source://railties//lib/rails/application.rb#440
  def initializers; end

  # source://railties//lib/rails/application.rb#383
  def isolate_namespace(mod); end

  # source://railties//lib/rails/application.rb#167
  def key_generator(secret_key_base = T.unsafe(nil)); end

  # source://railties//lib/rails/application.rb#539
  def load_generators(app = T.unsafe(nil)); end

  # source://railties//lib/rails/application.rb#231
  def message_verifier(verifier_name); end

  # source://railties//lib/rails/application.rb#203
  def message_verifiers; end

  # source://railties//lib/rails/application.rb#535
  def migration_railties; end

  # source://railties//lib/rails/application.rb#140
  def name; end

  # source://railties//lib/rails/application.rb#347
  def rake_tasks(&block); end

  # source://railties//lib/rails/application.rb#159
  def reload_routes!; end

  # source://railties//lib/rails/application.rb#101
  def reloader; end

  # source://railties//lib/rails/application.rb#101
  def reloaders; end

  # source://railties//lib/rails/application.rb#409
  def require_environment!; end

  # source://railties//lib/rails/application.rb#414
  def routes_reloader; end

  # source://railties//lib/rails/application.rb#144
  def run_load_hooks!; end

  # source://railties//lib/rails/application.rb#360
  def runner(&blk); end

  # source://railties//lib/rails/application.rb#99
  def sandbox; end

  # source://railties//lib/rails/application.rb#99
  def sandbox=(_arg0); end

  # source://railties//lib/rails/application.rb#99
  def sandbox?; end

  # source://railties//lib/rails/application.rb#469
  def secret_key_base; end

  # source://railties//lib/rails/application.rb#378
  def server(&blk); end

  # source://railties//lib/rails/application.rb#515
  def to_app; end

  # source://railties//lib/rails/application.rb#421
  def watchable_args; end

  protected

  # source://railties//lib/rails/application.rb#618
  def default_middleware_stack; end

  # source://railties//lib/rails/application.rb#623
  def ensure_generator_templates_added; end

  # source://railties//lib/rails/application.rb#584
  def ordered_railties; end

  # source://railties//lib/rails/application.rb#606
  def railties_initializers(current); end

  # source://railties//lib/rails/application.rb#573
  def run_console_blocks(app); end

  # source://railties//lib/rails/application.rb#563
  def run_generators_blocks(app); end

  # source://railties//lib/rails/application.rb#568
  def run_runner_blocks(app); end

  # source://railties//lib/rails/application.rb#578
  def run_server_blocks(app); end

  # source://railties//lib/rails/application.rb#552
  def run_tasks_blocks(app); end

  private

  # source://railties//lib/rails/application.rb#636
  def build_middleware; end

  # source://railties//lib/rails/application.rb#629
  def build_request(env); end

  # source://railties//lib/rails/application.rb#640
  def coerce_same_site_protection(protection); end

  # source://railties//lib/rails/application.rb#644
  def filter_parameters; end

  class << self
    # source://railties//lib/rails/application.rb#402
    def add_lib_to_load_path!(root); end

    # source://railties//lib/rails/application.rb#83
    def create(initial_variable_values = T.unsafe(nil), &block); end

    # source://railties//lib/rails/application.rb#87
    def find_root(from); end

    # source://railties//lib/rails/application.rb#70
    def inherited(base); end

    # source://railties//lib/rails/application.rb#79
    def instance; end

    def new(*_arg0); end
  end
end

# source://railties//lib/rails/application/bootstrap.rb#11
module Rails::Application::Bootstrap
  include ::Rails::Initializable
  extend ::Rails::Initializable::ClassMethods
end

# source://railties//lib/rails/application/configuration.rb#13
class Rails::Application::Configuration < ::Rails::Engine::Configuration
  # source://railties//lib/rails/application/configuration.rb#30
  def initialize(*_arg0); end

  # source://railties//lib/rails/application/configuration.rb#14
  def add_autoload_paths_to_load_path; end

  # source://railties//lib/rails/application/configuration.rb#14
  def add_autoload_paths_to_load_path=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#14
  def allow_concurrency; end

  # source://railties//lib/rails/application/configuration.rb#14
  def allow_concurrency=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#558
  def annotations; end

  # source://railties//lib/rails/application/configuration.rb#28
  def api_only; end

  # source://railties//lib/rails/application/configuration.rb#373
  def api_only=(value); end

  # source://railties//lib/rails/application/configuration.rb#14
  def asset_host; end

  # source://railties//lib/rails/application/configuration.rb#14
  def asset_host=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#14
  def assume_ssl; end

  # source://railties//lib/rails/application/configuration.rb#14
  def assume_ssl=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#14
  def autoflush_log; end

  # source://railties//lib/rails/application/configuration.rb#14
  def autoflush_log=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#468
  def autoload_lib(ignore:); end

  # source://railties//lib/rails/application/configuration.rb#480
  def autoload_lib_once(ignore:); end

  # source://railties//lib/rails/application/configuration.rb#14
  def beginning_of_week; end

  # source://railties//lib/rails/application/configuration.rb#14
  def beginning_of_week=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#385
  def broadcast_log_level; end

  # source://railties//lib/rails/application/configuration.rb#14
  def cache_classes; end

  # source://railties//lib/rails/application/configuration.rb#14
  def cache_classes=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#14
  def cache_store; end

  # source://railties//lib/rails/application/configuration.rb#14
  def cache_store=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#492
  def colorize_logging; end

  # source://railties//lib/rails/application/configuration.rb#496
  def colorize_logging=(val); end

  # source://railties//lib/rails/application/configuration.rb#14
  def consider_all_requests_local; end

  # source://railties//lib/rails/application/configuration.rb#14
  def consider_all_requests_local=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#14
  def console; end

  # source://railties//lib/rails/application/configuration.rb#14
  def console=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#563
  def content_security_policy(&block); end

  # source://railties//lib/rails/application/configuration.rb#14
  def content_security_policy_nonce_directives; end

  # source://railties//lib/rails/application/configuration.rb#14
  def content_security_policy_nonce_directives=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#14
  def content_security_policy_nonce_generator; end

  # source://railties//lib/rails/application/configuration.rb#14
  def content_security_policy_nonce_generator=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#14
  def content_security_policy_report_only; end

  # source://railties//lib/rails/application/configuration.rb#14
  def content_security_policy_report_only=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#14
  def credentials; end

  # source://railties//lib/rails/application/configuration.rb#14
  def credentials=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#431
  def database_configuration; end

  # source://railties//lib/rails/application/configuration.rb#387
  def debug_exception_response_format; end

  # source://railties//lib/rails/application/configuration.rb#391
  def debug_exception_response_format=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#580
  def default_log_file; end

  # source://railties//lib/rails/application/configuration.rb#14
  def disable_sandbox; end

  # source://railties//lib/rails/application/configuration.rb#14
  def disable_sandbox=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#14
  def dom_testing_default_html_version; end

  # source://railties//lib/rails/application/configuration.rb#14
  def dom_testing_default_html_version=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#14
  def eager_load; end

  # source://railties//lib/rails/application/configuration.rb#14
  def eager_load=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#349
  def enable_reloading; end

  # source://railties//lib/rails/application/configuration.rb#353
  def enable_reloading=(value); end

  # source://railties//lib/rails/application/configuration.rb#28
  def encoding; end

  # source://railties//lib/rails/application/configuration.rb#365
  def encoding=(value); end

  # source://railties//lib/rails/application/configuration.rb#14
  def exceptions_app; end

  # source://railties//lib/rails/application/configuration.rb#14
  def exceptions_app=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#14
  def file_watcher; end

  # source://railties//lib/rails/application/configuration.rb#14
  def file_watcher=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#14
  def filter_parameters; end

  # source://railties//lib/rails/application/configuration.rb#14
  def filter_parameters=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#14
  def filter_redirect; end

  # source://railties//lib/rails/application/configuration.rb#14
  def filter_redirect=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#14
  def force_ssl; end

  # source://railties//lib/rails/application/configuration.rb#14
  def force_ssl=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#14
  def helpers_paths; end

  # source://railties//lib/rails/application/configuration.rb#14
  def helpers_paths=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#14
  def host_authorization; end

  # source://railties//lib/rails/application/configuration.rb#14
  def host_authorization=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#14
  def hosts; end

  # source://railties//lib/rails/application/configuration.rb#14
  def hosts=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#592
  def inspect; end

  # source://railties//lib/rails/application/configuration.rb#413
  def load_database_yaml; end

  # source://railties//lib/rails/application/configuration.rb#91
  def load_defaults(target_version); end

  # source://railties//lib/rails/application/configuration.rb#28
  def loaded_config_version; end

  # source://railties//lib/rails/application/configuration.rb#14
  def log_file_size; end

  # source://railties//lib/rails/application/configuration.rb#14
  def log_file_size=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#14
  def log_formatter; end

  # source://railties//lib/rails/application/configuration.rb#14
  def log_formatter=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#28
  def log_level; end

  # source://railties//lib/rails/application/configuration.rb#380
  def log_level=(level); end

  # source://railties//lib/rails/application/configuration.rb#14
  def log_tags; end

  # source://railties//lib/rails/application/configuration.rb#14
  def log_tags=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#14
  def logger; end

  # source://railties//lib/rails/application/configuration.rb#14
  def logger=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#393
  def paths; end

  # source://railties//lib/rails/application/configuration.rb#572
  def permissions_policy(&block); end

  # source://railties//lib/rails/application/configuration.rb#14
  def precompile_filter_parameters; end

  # source://railties//lib/rails/application/configuration.rb#14
  def precompile_filter_parameters=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#14
  def public_file_server; end

  # source://railties//lib/rails/application/configuration.rb#14
  def public_file_server=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#14
  def railties_order; end

  # source://railties//lib/rails/application/configuration.rb#14
  def railties_order=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#14
  def rake_eager_load; end

  # source://railties//lib/rails/application/configuration.rb#14
  def rake_eager_load=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#357
  def read_encrypted_secrets; end

  # source://railties//lib/rails/application/configuration.rb#361
  def read_encrypted_secrets=(value); end

  # source://railties//lib/rails/application/configuration.rb#14
  def relative_url_root; end

  # source://railties//lib/rails/application/configuration.rb#14
  def relative_url_root=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#14
  def reload_classes_only_on_change; end

  # source://railties//lib/rails/application/configuration.rb#14
  def reload_classes_only_on_change=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#345
  def reloading_enabled?; end

  # source://railties//lib/rails/application/configuration.rb#14
  def require_master_key; end

  # source://railties//lib/rails/application/configuration.rb#14
  def require_master_key=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#14
  def sandbox_by_default; end

  # source://railties//lib/rails/application/configuration.rb#14
  def sandbox_by_default=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#501
  def secret_key_base; end

  # source://railties//lib/rails/application/configuration.rb#511
  def secret_key_base=(new_secret_key_base); end

  # source://railties//lib/rails/application/configuration.rb#14
  def server_timing; end

  # source://railties//lib/rails/application/configuration.rb#14
  def server_timing=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#14
  def session_options; end

  # source://railties//lib/rails/application/configuration.rb#14
  def session_options=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#538
  def session_store(new_session_store = T.unsafe(nil), **options); end

  # source://railties//lib/rails/application/configuration.rb#554
  def session_store?; end

  # source://railties//lib/rails/application/configuration.rb#14
  def ssl_options; end

  # source://railties//lib/rails/application/configuration.rb#14
  def ssl_options=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#14
  def time_zone; end

  # source://railties//lib/rails/application/configuration.rb#14
  def time_zone=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#14
  def x; end

  # source://railties//lib/rails/application/configuration.rb#14
  def x=(_arg0); end

  # source://railties//lib/rails/application/configuration.rb#14
  def yjit; end

  # source://railties//lib/rails/application/configuration.rb#14
  def yjit=(_arg0); end

  private

  # source://railties//lib/rails/application/configuration.rb#619
  def credentials_defaults; end

  # source://railties//lib/rails/application/configuration.rb#629
  def generate_local_secret; end

  # source://railties//lib/rails/application/configuration.rb#641
  def generate_local_secret?; end
end

# source://railties//lib/rails/application/configuration.rb#596
class Rails::Application::Configuration::Custom
  # source://railties//lib/rails/application/configuration.rb#597
  def initialize; end

  # source://railties//lib/rails/application/configuration.rb#601
  def method_missing(method, *args); end

  private

  # source://railties//lib/rails/application/configuration.rb#613
  def respond_to_missing?(symbol, _); end
end

# source://railties//lib/rails/application/default_middleware_stack.rb#5
class Rails::Application::DefaultMiddlewareStack
  # source://railties//lib/rails/application/default_middleware_stack.rb#8
  def initialize(app, config, paths); end

  # source://railties//lib/rails/application/default_middleware_stack.rb#6
  def app; end

  # source://railties//lib/rails/application/default_middleware_stack.rb#14
  def build_stack; end

  # source://railties//lib/rails/application/default_middleware_stack.rb#6
  def config; end

  # source://railties//lib/rails/application/default_middleware_stack.rb#6
  def paths; end

  private

  # source://railties//lib/rails/application/default_middleware_stack.rb#109
  def load_rack_cache; end

  # source://railties//lib/rails/application/default_middleware_stack.rb#131
  def show_exceptions_app; end
end

# source://railties//lib/rails/application/finisher.rb#11
module Rails::Application::Finisher
  include ::Rails::Initializable
  extend ::Rails::Initializable::ClassMethods
end

# source://railties//lib/rails/application/finisher.rb#111
module Rails::Application::Finisher::InterlockHook
  class << self
    # source://railties//lib/rails/application/finisher.rb#116
    def complete(_state); end

    # source://railties//lib/rails/application/finisher.rb#112
    def run; end
  end
end

# source://railties//lib/rails/application/finisher.rb#97
class Rails::Application::Finisher::MonitorHook
  # source://railties//lib/rails/application/finisher.rb#98
  def initialize(monitor = T.unsafe(nil)); end

  # source://railties//lib/rails/application/finisher.rb#106
  def complete(_state); end

  # source://railties//lib/rails/application/finisher.rb#102
  def run; end
end

# source://railties//lib/rails/application.rb#105
Rails::Application::INITIAL_VARIABLES = T.let(T.unsafe(nil), Array)

# source://railties//lib/rails/application/routes_reloader.rb#7
class Rails::Application::RoutesReloader
  include ::ActiveSupport::Callbacks
  extend ::ActiveSupport::Callbacks::ClassMethods
  extend ::ActiveSupport::DescendantsTracker

  # source://railties//lib/rails/application/routes_reloader.rb#15
  def initialize; end

  # source://activesupport/7.2.2.1/lib/active_support/callbacks.rb#70
  def __callbacks; end

  # source://activesupport/7.2.2.1/lib/active_support/callbacks.rb#70
  def __callbacks?; end

  # source://railties//lib/rails/application/routes_reloader.rb#11
  def eager_load; end

  # source://railties//lib/rails/application/routes_reloader.rb#11
  def eager_load=(_arg0); end

  # source://railties//lib/rails/application/routes_reloader.rb#13
  def execute(*_arg0, **_arg1, &_arg2); end

  # source://railties//lib/rails/application/routes_reloader.rb#13
  def execute_if_updated(*_arg0, **_arg1, &_arg2); end

  # source://railties//lib/rails/application/routes_reloader.rb#10
  def external_routes; end

  # source://railties//lib/rails/application/routes_reloader.rb#10
  def paths; end

  # source://railties//lib/rails/application/routes_reloader.rb#22
  def reload!; end

  # source://railties//lib/rails/application/routes_reloader.rb#10
  def route_sets; end

  # source://railties//lib/rails/application/routes_reloader.rb#12
  def run_after_load_paths=(_arg0); end

  # source://railties//lib/rails/application/routes_reloader.rb#13
  def updated?(*_arg0, **_arg1, &_arg2); end

  private

  # source://railties//lib/rails/application/routes_reloader.rb#42
  def clear!; end

  # source://railties//lib/rails/application/routes_reloader.rb#58
  def finalize!; end

  # source://railties//lib/rails/application/routes_reloader.rb#49
  def load_paths; end

  # source://railties//lib/rails/application/routes_reloader.rb#62
  def revert; end

  # source://railties//lib/rails/application/routes_reloader.rb#54
  def run_after_load_paths; end

  # source://railties//lib/rails/application/routes_reloader.rb#32
  def updater; end

  class << self
    # source://activesupport/7.2.2.1/lib/active_support/callbacks.rb#70
    def __callbacks; end

    # source://activesupport/7.2.2.1/lib/active_support/callbacks.rb#70
    def __callbacks=(value); end

    # source://activesupport/7.2.2.1/lib/active_support/callbacks.rb#70
    def __callbacks?; end
  end
end

# source://railties//lib/rails/application_controller.rb#3
class Rails::ApplicationController < ::ActionController::Base
  private

  # source://actionview/7.2.2.1/lib/action_view/layouts.rb#328
  def _layout(lookup_context, formats); end

  # source://railties//lib/rails/application_controller.rb#25
  def disable_content_security_policy_nonce!; end

  # source://railties//lib/rails/application_controller.rb#21
  def local_request?; end

  # source://railties//lib/rails/application_controller.rb#15
  def require_local!; end

  class << self
    # source://activesupport/7.2.2.1/lib/active_support/callbacks.rb#70
    def __callbacks; end

    # source://actionview/7.2.2.1/lib/action_view/layouts.rb#211
    def _layout; end

    # source://actionview/7.2.2.1/lib/action_view/layouts.rb#212
    def _layout_conditions; end

    # source://actionpack/7.2.2.1/lib/action_controller/metal.rb#288
    def middleware_stack; end
  end
end

# source://railties//lib/rails/autoloaders.rb#4
class Rails::Autoloaders
  include ::Enumerable

  # source://railties//lib/rails/autoloaders.rb#11
  def initialize; end

  # source://railties//lib/rails/autoloaders.rb#31
  def each; end

  # source://railties//lib/rails/autoloaders.rb#40
  def log!; end

  # source://railties//lib/rails/autoloaders.rb#36
  def logger=(logger); end

  # source://railties//lib/rails/autoloaders.rb#9
  def main; end

  # source://railties//lib/rails/autoloaders.rb#9
  def once; end

  # source://railties//lib/rails/autoloaders.rb#44
  def zeitwerk_enabled?; end
end

# source://railties//lib/rails/autoloaders/inflector.rb#7
module Rails::Autoloaders::Inflector
  class << self
    # source://railties//lib/rails/autoloaders/inflector.rb#12
    def camelize(basename, _abspath); end

    # source://railties//lib/rails/autoloaders/inflector.rb#16
    def inflect(overrides); end
  end
end

# source://railties//lib/rails/backtrace_cleaner.rb#7
class Rails::BacktraceCleaner < ::ActiveSupport::BacktraceCleaner
  # source://railties//lib/rails/backtrace_cleaner.rb#11
  def initialize; end

  # source://railties//lib/rails/backtrace_cleaner.rb#29
  def clean(backtrace, kind = T.unsafe(nil)); end

  # source://railties//lib/rails/backtrace_cleaner.rb#36
  def clean_frame(frame, kind = T.unsafe(nil)); end

  # source://railties//lib/rails/backtrace_cleaner.rb#29
  def filter(backtrace, kind = T.unsafe(nil)); end
end

# source://railties//lib/rails/backtrace_cleaner.rb#8
Rails::BacktraceCleaner::APP_DIRS_PATTERN = T.let(T.unsafe(nil), Regexp)

# source://railties//lib/rails/backtrace_cleaner.rb#9
Rails::BacktraceCleaner::RENDER_TEMPLATE_PATTERN = T.let(T.unsafe(nil), Regexp)

# source://railties//lib/rails/configuration.rb#9
module Rails::Configuration; end

# source://railties//lib/rails/configuration.rb#104
class Rails::Configuration::Generators
  # source://railties//lib/rails/configuration.rb#108
  def initialize; end

  # source://railties//lib/rails/configuration.rb#130
  def after_generate(&block); end

  # source://railties//lib/rails/configuration.rb#106
  def after_generate_callbacks; end

  # source://railties//lib/rails/configuration.rb#105
  def aliases; end

  # source://railties//lib/rails/configuration.rb#105
  def aliases=(_arg0); end

  # source://railties//lib/rails/configuration.rb#105
  def api_only; end

  # source://railties//lib/rails/configuration.rb#105
  def api_only=(_arg0); end

  # source://railties//lib/rails/configuration.rb#134
  def apply_rubocop_autocorrect_after_generate!; end

  # source://railties//lib/rails/configuration.rb#105
  def colorize_logging; end

  # source://railties//lib/rails/configuration.rb#105
  def colorize_logging=(_arg0); end

  # source://railties//lib/rails/configuration.rb#105
  def fallbacks; end

  # source://railties//lib/rails/configuration.rb#105
  def fallbacks=(_arg0); end

  # source://railties//lib/rails/configuration.rb#106
  def hidden_namespaces; end

  # source://railties//lib/rails/configuration.rb#126
  def hide_namespace(namespace); end

  # source://railties//lib/rails/configuration.rb#143
  def method_missing(method, *args); end

  # source://railties//lib/rails/configuration.rb#105
  def options; end

  # source://railties//lib/rails/configuration.rb#105
  def options=(_arg0); end

  # source://railties//lib/rails/configuration.rb#105
  def templates; end

  # source://railties//lib/rails/configuration.rb#105
  def templates=(_arg0); end

  private

  # source://railties//lib/rails/configuration.rb#119
  def initialize_copy(source); end
end

# source://railties//lib/rails/configuration.rb#46
class Rails::Configuration::MiddlewareStackProxy
  # source://railties//lib/rails/configuration.rb#47
  def initialize(operations = T.unsafe(nil), delete_operations = T.unsafe(nil)); end

  # source://railties//lib/rails/configuration.rb#96
  def +(other); end

  # source://railties//lib/rails/configuration.rb#70
  def delete(*_arg0, **_arg1, &_arg2); end

  # source://railties//lib/rails/configuration.rb#52
  def insert(*_arg0, **_arg1, &_arg2); end

  # source://railties//lib/rails/configuration.rb#58
  def insert_after(*_arg0, **_arg1, &_arg2); end

  # source://railties//lib/rails/configuration.rb#52
  def insert_before(*_arg0, **_arg1, &_arg2); end

  # source://railties//lib/rails/configuration.rb#88
  def merge_into(other); end

  # source://railties//lib/rails/configuration.rb#74
  def move(*_arg0, **_arg1, &_arg2); end

  # source://railties//lib/rails/configuration.rb#80
  def move_after(*_arg0, **_arg1, &_arg2); end

  # source://railties//lib/rails/configuration.rb#74
  def move_before(*_arg0, **_arg1, &_arg2); end

  # source://railties//lib/rails/configuration.rb#62
  def swap(*_arg0, **_arg1, &_arg2); end

  # source://railties//lib/rails/configuration.rb#84
  def unshift(*_arg0, **_arg1, &_arg2); end

  # source://railties//lib/rails/configuration.rb#66
  def use(*_arg0, **_arg1, &_arg2); end

  protected

  # source://railties//lib/rails/configuration.rb#101
  def delete_operations; end

  # source://railties//lib/rails/configuration.rb#101
  def operations; end
end

# source://railties//lib/rails/engine/railties.rb#4
class Rails::Engine < ::Rails::Railtie
  include ::ActiveSupport::Callbacks
  extend ::ActiveSupport::Callbacks::ClassMethods

  # source://railties//lib/rails/engine.rb#439
  def initialize; end

  # source://activesupport/7.2.2.1/lib/active_support/callbacks.rb#70
  def __callbacks; end

  # source://activesupport/7.2.2.1/lib/active_support/callbacks.rb#70
  def __callbacks?; end

  # source://activesupport/7.2.2.1/lib/active_support/callbacks.rb#924
  def _load_seed_callbacks; end

  # source://activesupport/7.2.2.1/lib/active_support/callbacks.rb#912
  def _run_load_seed_callbacks(&block); end

  # source://railties//lib/rails/engine.rb#516
  def app; end

  # source://railties//lib/rails/engine.rb#533
  def call(env); end

  # source://railties//lib/rails/engine.rb#552
  def config; end

  # source://railties//lib/rails/engine.rb#490
  def eager_load!; end

  # source://railties//lib/rails/engine.rb#528
  def endpoint; end

  # source://railties//lib/rails/engine.rb#437
  def engine_name(*_arg0, **_arg1, &_arg2); end

  # source://railties//lib/rails/engine.rb#539
  def env_config; end

  # source://railties//lib/rails/engine.rb#500
  def helpers; end

  # source://railties//lib/rails/engine.rb#511
  def helpers_paths; end

  # source://railties//lib/rails/engine.rb#437
  def isolated?(&_arg0); end

  # source://railties//lib/rails/engine.rb#453
  def load_console(app = T.unsafe(nil)); end

  # source://railties//lib/rails/engine.rb#476
  def load_generators(app = T.unsafe(nil)); end

  # source://railties//lib/rails/engine.rb#461
  def load_runner(app = T.unsafe(nil)); end

  # source://railties//lib/rails/engine.rb#560
  def load_seed; end

  # source://railties//lib/rails/engine.rb#485
  def load_server(app = T.unsafe(nil)); end

  # source://railties//lib/rails/engine.rb#468
  def load_tasks(app = T.unsafe(nil)); end

  # source://railties//lib/rails/engine.rb#436
  def middleware(*_arg0, **_arg1, &_arg2); end

  # source://railties//lib/rails/engine.rb#436
  def paths(*_arg0, **_arg1, &_arg2); end

  # source://railties//lib/rails/engine.rb#495
  def railties; end

  # source://railties//lib/rails/engine.rb#436
  def root(*_arg0, **_arg1, &_arg2); end

  # source://railties//lib/rails/engine.rb#545
  def routes(&block); end

  # source://railties//lib/rails/engine.rb#676
  def routes?; end

  protected

  # source://railties//lib/rails/engine.rb#681
  def run_tasks_blocks(*_arg0); end

  private

  # source://railties//lib/rails/engine.rb#713
  def _all_autoload_once_paths; end

  # source://railties//lib/rails/engine.rb#717
  def _all_autoload_paths; end

  # source://railties//lib/rails/engine.rb#726
  def _all_load_paths(add_autoload_paths_to_load_path); end

  # source://railties//lib/rails/engine.rb#751
  def build_middleware; end

  # source://railties//lib/rails/engine.rb#743
  def build_request(env); end

  # source://railties//lib/rails/engine.rb#709
  def default_middleware_stack; end

  # source://railties//lib/rails/engine.rb#737
  def fixtures_in_root_and_not_in_vendor_or_dot_dir?(fixtures); end

  # source://railties//lib/rails/engine.rb#693
  def has_migrations?; end

  # source://railties//lib/rails/engine.rb#687
  def load_config_initializer(initializer); end

  class << self
    # source://activesupport/7.2.2.1/lib/active_support/callbacks.rb#70
    def __callbacks; end

    # source://activesupport/7.2.2.1/lib/active_support/callbacks.rb#70
    def __callbacks=(value); end

    # source://activesupport/7.2.2.1/lib/active_support/callbacks.rb#70
    def __callbacks?; end

    # source://activesupport/7.2.2.1/lib/active_support/callbacks.rb#916
    def _load_seed_callbacks; end

    # source://activesupport/7.2.2.1/lib/active_support/callbacks.rb#920
    def _load_seed_callbacks=(value); end

    # source://railties//lib/rails/engine.rb#354
    def called_from; end

    # source://railties//lib/rails/engine.rb#354
    def called_from=(_arg0); end

    # source://railties//lib/rails/engine.rb#359
    def eager_load!(*_arg0, **_arg1, &_arg2); end

    # source://railties//lib/rails/engine.rb#379
    def endpoint(endpoint = T.unsafe(nil)); end

    # source://railties//lib/rails/railtie.rb#176
    def engine_name(name = T.unsafe(nil)); end

    # source://railties//lib/rails/engine.rb#423
    def find(path); end

    # source://railties//lib/rails/engine.rb#375
    def find_root(from); end

    # source://railties//lib/rails/engine.rb#697
    def find_root_with_flag(flag, root_path, default = T.unsafe(nil)); end

    # source://railties//lib/rails/engine.rb#361
    def inherited(base); end

    # source://railties//lib/rails/engine.rb#385
    def isolate_namespace(mod); end

    # source://railties//lib/rails/engine.rb#354
    def isolated; end

    # source://railties//lib/rails/engine.rb#354
    def isolated=(_arg0); end

    # source://railties//lib/rails/engine.rb#354
    def isolated?; end
  end
end

# source://railties//lib/rails/engine/configuration.rb#7
class Rails::Engine::Configuration < ::Rails::Railtie::Configuration
  # source://railties//lib/rails/engine/configuration.rb#41
  def initialize(root = T.unsafe(nil)); end

  # source://railties//lib/rails/engine/configuration.rb#125
  def all_autoload_once_paths; end

  # source://railties//lib/rails/engine/configuration.rb#119
  def all_autoload_paths; end

  # source://railties//lib/rails/engine/configuration.rb#131
  def all_eager_load_paths; end

  # source://railties//lib/rails/engine/configuration.rb#29
  def autoload_once_paths; end

  # source://railties//lib/rails/engine/configuration.rb#10
  def autoload_once_paths=(_arg0); end

  # source://railties//lib/rails/engine/configuration.rb#20
  def autoload_paths; end

  # source://railties//lib/rails/engine/configuration.rb#10
  def autoload_paths=(_arg0); end

  # source://railties//lib/rails/engine/configuration.rb#39
  def eager_load_paths; end

  # source://railties//lib/rails/engine/configuration.rb#10
  def eager_load_paths=(_arg0); end

  # source://railties//lib/rails/engine/configuration.rb#65
  def generators; end

  # source://railties//lib/rails/engine/configuration.rb#9
  def javascript_path; end

  # source://railties//lib/rails/engine/configuration.rb#9
  def javascript_path=(_arg0); end

  # source://railties//lib/rails/engine/configuration.rb#9
  def middleware; end

  # source://railties//lib/rails/engine/configuration.rb#9
  def middleware=(_arg0); end

  # source://railties//lib/rails/engine/configuration.rb#71
  def paths; end

  # source://railties//lib/rails/engine/configuration.rb#8
  def root; end

  # source://railties//lib/rails/engine/configuration.rb#113
  def root=(value); end
end

# source://railties//lib/rails/engine/railties.rb#5
class Rails::Engine::Railties
  include ::Enumerable

  # source://railties//lib/rails/engine/railties.rb#9
  def initialize; end

  # source://railties//lib/rails/engine/railties.rb#18
  def -(others); end

  # source://railties//lib/rails/engine/railties.rb#7
  def _all; end

  # source://railties//lib/rails/engine/railties.rb#14
  def each(*args, &block); end
end

# source://railties//lib/rails/health_controller.rb#35
class Rails::HealthController < ::ActionController::Base
  # source://railties//lib/rails/health_controller.rb#38
  def show; end

  private

  # source://actionview/7.2.2.1/lib/action_view/layouts.rb#328
  def _layout(lookup_context, formats); end

  # source://railties//lib/rails/health_controller.rb#51
  def html_status(color:); end

  # source://railties//lib/rails/health_controller.rb#47
  def render_down; end

  # source://railties//lib/rails/health_controller.rb#43
  def render_up; end

  class << self
    # source://actionpack/7.2.2.1/lib/action_controller/metal.rb#288
    def middleware_stack; end

    # source://activesupport/7.2.2.1/lib/active_support/rescuable.rb#15
    def rescue_handlers; end
  end
end

# source://railties//lib/rails/info.rb#9
module Rails::Info
  # source://railties//lib/rails/info.rb#10
  def properties; end

  # source://railties//lib/rails/info.rb#10
  def properties=(val); end

  class << self
    # source://railties//lib/rails/info.rb#31
    def inspect; end

    # source://railties//lib/rails/info.rb#10
    def properties; end

    # source://railties//lib/rails/info.rb#10
    def properties=(val); end

    # source://railties//lib/rails/info.rb#25
    def property(name, value = T.unsafe(nil)); end

    # source://railties//lib/rails/info.rb#43
    def to_html; end

    # source://railties//lib/rails/info.rb#31
    def to_s; end
  end
end

# source://railties//lib/rails/info_controller.rb#6
class Rails::InfoController < ::Rails::ApplicationController
  # source://railties//lib/rails/info_controller.rb#14
  def index; end

  # source://railties//lib/rails/info_controller.rb#18
  def properties; end

  # source://railties//lib/rails/info_controller.rb#23
  def routes; end

  private

  # source://actionview/7.2.2.1/lib/action_view/layouts.rb#328
  def _layout(lookup_context, formats); end

  # source://railties//lib/rails/info_controller.rb#8
  def _layout_from_proc; end

  # source://railties//lib/rails/info_controller.rb#38
  def matching_routes(query:, exact_match:); end

  class << self
    # source://activesupport/7.2.2.1/lib/active_support/callbacks.rb#70
    def __callbacks; end

    # source://actionview/7.2.2.1/lib/action_view/layouts.rb#211
    def _layout; end

    # source://actionview/7.2.2.1/lib/action_view/layouts.rb#212
    def _layout_conditions; end

    # source://actionpack/7.2.2.1/lib/action_controller/metal.rb#288
    def middleware_stack; end
  end
end

# source://railties//lib/rails/info_controller.rb#10
Rails::InfoController::RFC2396_PARSER = T.let(T.unsafe(nil), URI::RFC2396_Parser)

# source://railties//lib/rails/initializable.rb#6
module Rails::Initializable
  mixes_in_class_methods ::Rails::Initializable::ClassMethods

  # source://railties//lib/rails/initializable.rb#66
  def initializers; end

  # source://railties//lib/rails/initializable.rb#58
  def run_initializers(group = T.unsafe(nil), *args); end

  class << self
    # source://railties//lib/rails/initializable.rb#7
    def included(base); end
  end
end

# source://railties//lib/rails/initializable.rb#70
module Rails::Initializable::ClassMethods
  # source://railties//lib/rails/initializable.rb#88
  def initializer(name, opts = T.unsafe(nil), &blk); end

  # source://railties//lib/rails/initializable.rb#71
  def initializers; end

  # source://railties//lib/rails/initializable.rb#75
  def initializers_chain; end

  # source://railties//lib/rails/initializable.rb#84
  def initializers_for(binding); end
end

# source://railties//lib/rails/initializable.rb#45
class Rails::Initializable::Collection < ::Array
  include ::TSort

  # source://railties//lib/rails/initializable.rb#53
  def +(other); end

  # source://railties//lib/rails/initializable.rb#49
  def tsort_each_child(initializer, &block); end

  def tsort_each_node; end
end

# source://railties//lib/rails/initializable.rb#11
class Rails::Initializable::Initializer
  # source://railties//lib/rails/initializable.rb#14
  def initialize(name, context, options, &block); end

  # source://railties//lib/rails/initializable.rb#23
  def after; end

  # source://railties//lib/rails/initializable.rb#19
  def before; end

  # source://railties//lib/rails/initializable.rb#27
  def belongs_to?(group); end

  # source://railties//lib/rails/initializable.rb#35
  def bind(context); end

  # source://railties//lib/rails/initializable.rb#12
  def block; end

  # source://railties//lib/rails/initializable.rb#40
  def context_class; end

  # source://railties//lib/rails/initializable.rb#12
  def name; end

  # source://railties//lib/rails/initializable.rb#31
  def run(*args); end
end

# source://railties//lib/rails/mailers_controller.rb#6
class Rails::MailersController < ::Rails::ApplicationController
  # source://railties//lib/rails/mailers_controller.rb#22
  def download; end

  # source://railties//lib/rails/mailers_controller.rb#17
  def index; end

  # source://railties//lib/rails/mailers_controller.rb#32
  def preview; end

  private

  # source://actionview/7.2.2.1/lib/action_view/layouts.rb#328
  def _layout(lookup_context, formats); end

  # source://railties//lib/rails/mailers_controller.rb#107
  def attachment_url(attachment); end

  # source://railties//lib/rails/mailers_controller.rb#101
  def attachments_for(email); end

  # source://railties//lib/rails/mailers_controller.rb#93
  def find_part(format); end

  # source://railties//lib/rails/mailers_controller.rb#81
  def find_preferred_part(*formats); end

  # source://railties//lib/rails/mailers_controller.rb#69
  def find_preview; end

  # source://railties//lib/rails/mailers_controller.rb#115
  def locale_query(locale); end

  # source://railties//lib/rails/mailers_controller.rb#111
  def part_query(mime_type); end

  # source://railties//lib/rails/mailers_controller.rb#119
  def set_locale(&block); end

  # source://railties//lib/rails/mailers_controller.rb#65
  def show_previews?; end

  class << self
    # source://activesupport/7.2.2.1/lib/active_support/callbacks.rb#70
    def __callbacks; end

    # source://actionpack/7.2.2.1/lib/abstract_controller/helpers.rb#13
    def _helper_methods; end

    # source://actionpack/7.2.2.1/lib/action_controller/metal.rb#288
    def middleware_stack; end
  end
end

# source://railties//lib/rails/mailers_controller.rb#0
module Rails::MailersController::HelperMethods
  include ::ActionController::Base::HelperMethods

  # source://railties//lib/rails/mailers_controller.rb#13
  def attachment_url(*_arg0, **_arg1, &_arg2); end

  # source://railties//lib/rails/mailers_controller.rb#13
  def locale_query(*_arg0, **_arg1, &_arg2); end

  # source://railties//lib/rails/mailers_controller.rb#13
  def part_query(*_arg0, **_arg1, &_arg2); end
end

# source://railties//lib/rails/paths.rb#6
module Rails::Paths; end

# source://railties//lib/rails/paths.rb#114
class Rails::Paths::Path
  include ::Enumerable

  # source://railties//lib/rails/paths.rb#119
  def initialize(root, current, paths, options = T.unsafe(nil)); end

  # source://railties//lib/rails/paths.rb#171
  def <<(path); end

  # source://railties//lib/rails/paths.rb#132
  def absolute_current; end

  # source://railties//lib/rails/paths.rb#153
  def autoload!; end

  # source://railties//lib/rails/paths.rb#161
  def autoload?; end

  # source://railties//lib/rails/paths.rb#153
  def autoload_once!; end

  # source://railties//lib/rails/paths.rb#161
  def autoload_once?; end

  # source://railties//lib/rails/paths.rb#136
  def children; end

  # source://railties//lib/rails/paths.rb#176
  def concat(paths); end

  # source://railties//lib/rails/paths.rb#167
  def each(&block); end

  # source://railties//lib/rails/paths.rb#153
  def eager_load!; end

  # source://railties//lib/rails/paths.rb#161
  def eager_load?; end

  # source://railties//lib/rails/paths.rb#220
  def existent; end

  # source://railties//lib/rails/paths.rb#231
  def existent_directories; end

  # source://railties//lib/rails/paths.rb#201
  def expanded; end

  # source://railties//lib/rails/paths.rb#196
  def extensions; end

  # source://railties//lib/rails/paths.rb#143
  def first; end

  # source://railties//lib/rails/paths.rb#117
  def glob; end

  # source://railties//lib/rails/paths.rb#117
  def glob=(_arg0); end

  # source://railties//lib/rails/paths.rb#147
  def last; end

  # source://railties//lib/rails/paths.rb#153
  def load_path!; end

  # source://railties//lib/rails/paths.rb#161
  def load_path?; end

  # source://railties//lib/rails/paths.rb#188
  def paths; end

  # source://railties//lib/rails/paths.rb#171
  def push(path); end

  # source://railties//lib/rails/paths.rb#157
  def skip_autoload!; end

  # source://railties//lib/rails/paths.rb#157
  def skip_autoload_once!; end

  # source://railties//lib/rails/paths.rb#157
  def skip_eager_load!; end

  # source://railties//lib/rails/paths.rb#157
  def skip_load_path!; end

  # source://railties//lib/rails/paths.rb#201
  def to_a; end

  # source://railties//lib/rails/paths.rb#184
  def to_ary; end

  # source://railties//lib/rails/paths.rb#180
  def unshift(*paths); end

  private

  # source://railties//lib/rails/paths.rb#238
  def files_in(path); end
end

# source://railties//lib/rails/paths.rb#51
class Rails::Paths::Root
  # source://railties//lib/rails/paths.rb#54
  def initialize(path); end

  # source://railties//lib/rails/paths.rb#69
  def [](path); end

  # source://railties//lib/rails/paths.rb#59
  def []=(path, value); end

  # source://railties//lib/rails/paths.rb#64
  def add(path, options = T.unsafe(nil)); end

  # source://railties//lib/rails/paths.rb#85
  def all_paths; end

  # source://railties//lib/rails/paths.rb#89
  def autoload_once; end

  # source://railties//lib/rails/paths.rb#97
  def autoload_paths; end

  # source://railties//lib/rails/paths.rb#93
  def eager_load; end

  # source://railties//lib/rails/paths.rb#77
  def keys; end

  # source://railties//lib/rails/paths.rb#101
  def load_paths; end

  # source://railties//lib/rails/paths.rb#52
  def path; end

  # source://railties//lib/rails/paths.rb#52
  def path=(_arg0); end

  # source://railties//lib/rails/paths.rb#73
  def values; end

  # source://railties//lib/rails/paths.rb#81
  def values_at(*list); end

  private

  # source://railties//lib/rails/paths.rb#106
  def filter_by(&block); end
end

# source://railties//lib/rails/pwa_controller.rb#5
class Rails::PwaController < ::Rails::ApplicationController
  # source://railties//lib/rails/pwa_controller.rb#12
  def manifest; end

  # source://railties//lib/rails/pwa_controller.rb#8
  def service_worker; end

  private

  # source://actionview/7.2.2.1/lib/action_view/layouts.rb#328
  def _layout(lookup_context, formats); end

  class << self
    # source://activesupport/7.2.2.1/lib/active_support/callbacks.rb#70
    def __callbacks; end

    # source://actionpack/7.2.2.1/lib/action_controller/metal.rb#288
    def middleware_stack; end
  end
end

# source://railties//lib/rails/rack.rb#4
module Rails::Rack; end

# source://railties//lib/rails/rack/logger.rb#14
class Rails::Rack::Logger < ::ActiveSupport::LogSubscriber
  # source://railties//lib/rails/rack/logger.rb#15
  def initialize(app, taggers = T.unsafe(nil)); end

  # source://railties//lib/rails/rack/logger.rb#20
  def call(env); end

  private

  # source://railties//lib/rails/rack/logger.rb#33
  def call_app(request, env); end

  # source://railties//lib/rails/rack/logger.rb#64
  def compute_tags(request); end

  # source://railties//lib/rails/rack/logger.rb#81
  def finish_request_instrumentation(handle, logger_tag_pop_count); end

  # source://railties//lib/rails/rack/logger.rb#77
  def logger; end

  # source://railties//lib/rails/rack/logger.rb#56
  def started_request_message(request); end
end

# source://railties//lib/rails/railtie.rb#136
class Rails::Railtie
  include ::Rails::Initializable
  extend ::ActiveSupport::DescendantsTracker
  extend ::Rails::Initializable::ClassMethods

  # source://railties//lib/rails/railtie.rb#245
  def initialize; end

  # source://railties//lib/rails/railtie.rb#262
  def config; end

  # source://railties//lib/rails/railtie.rb#255
  def configure(&block); end

  # source://railties//lib/rails/railtie.rb#251
  def inspect; end

  # source://railties//lib/rails/railtie.rb#243
  def railtie_name(*_arg0, **_arg1, &_arg2); end

  # source://railties//lib/rails/railtie.rb#266
  def railtie_namespace; end

  protected

  # source://railties//lib/rails/railtie.rb#271
  def run_console_blocks(app); end

  # source://railties//lib/rails/railtie.rb#275
  def run_generators_blocks(app); end

  # source://railties//lib/rails/railtie.rb#279
  def run_runner_blocks(app); end

  # source://railties//lib/rails/railtie.rb#288
  def run_server_blocks(app); end

  # source://railties//lib/rails/railtie.rb#283
  def run_tasks_blocks(app); end

  private

  # source://railties//lib/rails/railtie.rb#294
  def each_registered_block(type, &block); end

  class << self
    # source://railties//lib/rails/railtie.rb#194
    def <=>(other); end

    # source://railties//lib/rails/railtie.rb#172
    def abstract_railtie?; end

    # source://railties//lib/rails/railtie.rb#146
    def config(*_arg0, **_arg1, &_arg2); end

    # source://railties//lib/rails/railtie.rb#190
    def configure(&block); end

    # source://railties//lib/rails/railtie.rb#156
    def console(&blk); end

    # source://railties//lib/rails/railtie.rb#164
    def generators(&blk); end

    # source://railties//lib/rails/railtie.rb#198
    def inherited(subclass); end

    # source://railties//lib/rails/railtie.rb#183
    def instance; end

    # source://railties//lib/rails/railtie.rb#176
    def railtie_name(name = T.unsafe(nil)); end

    # source://railties//lib/rails/railtie.rb#152
    def rake_tasks(&blk); end

    # source://railties//lib/rails/railtie.rb#160
    def runner(&blk); end

    # source://railties//lib/rails/railtie.rb#168
    def server(&blk); end

    # source://railties//lib/rails/railtie.rb#148
    def subclasses; end

    protected

    # source://railties//lib/rails/railtie.rb#206
    def increment_load_index; end

    # source://railties//lib/rails/railtie.rb#204
    def load_index; end

    private

    # source://railties//lib/rails/railtie.rb#212
    def generate_railtie_name(string); end

    # source://railties//lib/rails/railtie.rb#224
    def method_missing(name, *_arg1, **_arg2, &_arg3); end

    def new(*_arg0); end

    # source://railties//lib/rails/railtie.rb#235
    def register_block_for(type, &blk); end

    # source://railties//lib/rails/railtie.rb#216
    def respond_to_missing?(name, _); end
  end
end

# source://railties//lib/rails/railtie.rb#142
Rails::Railtie::ABSTRACT_RAILTIES = T.let(T.unsafe(nil), Array)

# source://railties//lib/rails/railtie/configuration.rb#7
class Rails::Railtie::Configuration
  # source://railties//lib/rails/railtie/configuration.rb#8
  def initialize; end

  # source://railties//lib/rails/railtie/configuration.rb#70
  def after_initialize(&block); end

  # source://railties//lib/rails/railtie/configuration.rb#75
  def after_routes_loaded(&block); end

  # source://railties//lib/rails/railtie/configuration.rb#47
  def app_generators; end

  # source://railties//lib/rails/railtie/configuration.rb#39
  def app_middleware; end

  # source://railties//lib/rails/railtie/configuration.rb#54
  def before_configuration(&block); end

  # source://railties//lib/rails/railtie/configuration.rb#60
  def before_eager_load(&block); end

  # source://railties//lib/rails/railtie/configuration.rb#65
  def before_initialize(&block); end

  # source://railties//lib/rails/railtie/configuration.rb#18
  def eager_load_namespaces; end

  # source://railties//lib/rails/railtie/configuration.rb#90
  def respond_to?(name, include_private = T.unsafe(nil)); end

  # source://railties//lib/rails/railtie/configuration.rb#86
  def to_prepare(&blk); end

  # source://railties//lib/rails/railtie/configuration.rb#80
  def to_prepare_blocks; end

  # source://railties//lib/rails/railtie/configuration.rb#30
  def watchable_dirs; end

  # source://railties//lib/rails/railtie/configuration.rb#23
  def watchable_files; end

  private

  # source://railties//lib/rails/railtie/configuration.rb#95
  def actual_method?(key); end

  # source://railties//lib/rails/railtie/configuration.rb#99
  def method_missing(name, *args, &blk); end

  class << self
    # source://railties//lib/rails/railtie/configuration.rb#13
    def eager_load_namespaces; end
  end
end

# source://railties//lib/rails/source_annotation_extractor.rb#15
class Rails::SourceAnnotationExtractor
  # source://railties//lib/rails/source_annotation_extractor.rb#137
  def initialize(tag); end

  # source://railties//lib/rails/source_annotation_extractor.rb#186
  def display(results, options = T.unsafe(nil)); end

  # source://railties//lib/rails/source_annotation_extractor.rb#143
  def find(dirs); end

  # source://railties//lib/rails/source_annotation_extractor.rb#151
  def find_in(dir); end

  # source://railties//lib/rails/source_annotation_extractor.rb#135
  def tag; end

  class << self
    # source://railties//lib/rails/source_annotation_extractor.rb#128
    def enumerate(tag = T.unsafe(nil), options = T.unsafe(nil)); end
  end
end

# source://railties//lib/rails/source_annotation_extractor.rb#54
class Rails::SourceAnnotationExtractor::Annotation < ::Struct
  # source://railties//lib/rails/source_annotation_extractor.rb#107
  def to_s(options = T.unsafe(nil)); end

  class << self
    # source://railties//lib/rails/source_annotation_extractor.rb#55
    def directories; end

    # source://railties//lib/rails/source_annotation_extractor.rb#75
    def extensions; end

    # source://railties//lib/rails/source_annotation_extractor.rb#61
    def register_directories(*dirs); end

    # source://railties//lib/rails/source_annotation_extractor.rb#81
    def register_extensions(*exts, &block); end

    # source://railties//lib/rails/source_annotation_extractor.rb#71
    def register_tags(*additional_tags); end

    # source://railties//lib/rails/source_annotation_extractor.rb#65
    def tags; end
  end
end

# source://railties//lib/rails/source_annotation_extractor.rb#18
class Rails::SourceAnnotationExtractor::ParserExtractor < ::Struct
  # source://railties//lib/rails/source_annotation_extractor.rb#33
  def annotations(file); end
end

# source://railties//lib/rails/source_annotation_extractor.rb#19
class Rails::SourceAnnotationExtractor::ParserExtractor::Parser < ::Ripper
  # source://railties//lib/rails/source_annotation_extractor.rb#22
  def initialize(source, pattern:); end

  # source://railties//lib/rails/source_annotation_extractor.rb#20
  def comments; end

  # source://railties//lib/rails/source_annotation_extractor.rb#28
  def on_comment(value); end

  # source://railties//lib/rails/source_annotation_extractor.rb#20
  def pattern; end
end

# source://railties//lib/rails/source_annotation_extractor.rb#42
class Rails::SourceAnnotationExtractor::PatternExtractor < ::Struct
  # source://railties//lib/rails/source_annotation_extractor.rb#43
  def annotations(file); end
end

# source://railties//lib/rails/gem_version.rb#9
module Rails::VERSION; end

# source://railties//lib/rails/gem_version.rb#10
Rails::VERSION::MAJOR = T.let(T.unsafe(nil), Integer)

# source://railties//lib/rails/gem_version.rb#11
Rails::VERSION::MINOR = T.let(T.unsafe(nil), Integer)

# source://railties//lib/rails/gem_version.rb#13
Rails::VERSION::PRE = T.let(T.unsafe(nil), String)

# source://railties//lib/rails/gem_version.rb#15
Rails::VERSION::STRING = T.let(T.unsafe(nil), String)

# source://railties//lib/rails/gem_version.rb#12
Rails::VERSION::TINY = T.let(T.unsafe(nil), Integer)

# source://railties//lib/rails/welcome_controller.rb#5
class Rails::WelcomeController < ::Rails::ApplicationController
  # source://railties//lib/rails/welcome_controller.rb#9
  def index; end

  private

  # source://actionview/7.2.2.1/lib/action_view/layouts.rb#328
  def _layout(lookup_context, formats); end

  class << self
    # source://activesupport/7.2.2.1/lib/active_support/callbacks.rb#70
    def __callbacks; end

    # source://actionview/7.2.2.1/lib/action_view/layouts.rb#211
    def _layout; end

    # source://actionview/7.2.2.1/lib/action_view/layouts.rb#212
    def _layout_conditions; end

    # source://actionpack/7.2.2.1/lib/action_controller/metal.rb#288
    def middleware_stack; end
  end
end
