# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `rspec-mocks` gem.
# Please instead update this file by running `bin/tapioca gem rspec-mocks`.


# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#6
module RSpec
  class << self
    # source://rspec-core/3.13.0/lib/rspec/core.rb#70
    def clear_examples; end

    # source://rspec-core/3.13.0/lib/rspec/core.rb#85
    def configuration; end

    # source://rspec-core/3.13.0/lib/rspec/core.rb#49
    def configuration=(_arg0); end

    # source://rspec-core/3.13.0/lib/rspec/core.rb#97
    def configure; end

    # source://rspec-core/3.13.0/lib/rspec/core.rb#194
    def const_missing(name); end

    # source://rspec-core/3.13.0/lib/rspec/core/dsl.rb#42
    def context(*args, &example_group_block); end

    # source://rspec-core/3.13.0/lib/rspec/core.rb#122
    def current_example; end

    # source://rspec-core/3.13.0/lib/rspec/core.rb#128
    def current_example=(example); end

    # source://rspec-core/3.13.0/lib/rspec/core.rb#154
    def current_scope; end

    # source://rspec-core/3.13.0/lib/rspec/core.rb#134
    def current_scope=(scope); end

    # source://rspec-core/3.13.0/lib/rspec/core/dsl.rb#42
    def describe(*args, &example_group_block); end

    # source://rspec-core/3.13.0/lib/rspec/core/dsl.rb#42
    def example_group(*args, &example_group_block); end

    # source://rspec-core/3.13.0/lib/rspec/core/dsl.rb#42
    def fcontext(*args, &example_group_block); end

    # source://rspec-core/3.13.0/lib/rspec/core/dsl.rb#42
    def fdescribe(*args, &example_group_block); end

    # source://rspec-core/3.13.0/lib/rspec/core.rb#58
    def reset; end

    # source://rspec-core/3.13.0/lib/rspec/core/shared_example_group.rb#110
    def shared_context(name, *args, &block); end

    # source://rspec-core/3.13.0/lib/rspec/core/shared_example_group.rb#110
    def shared_examples(name, *args, &block); end

    # source://rspec-core/3.13.0/lib/rspec/core/shared_example_group.rb#110
    def shared_examples_for(name, *args, &block); end

    # source://rspec-core/3.13.0/lib/rspec/core.rb#160
    def world; end

    # source://rspec-core/3.13.0/lib/rspec/core.rb#49
    def world=(_arg0); end

    # source://rspec-core/3.13.0/lib/rspec/core/dsl.rb#42
    def xcontext(*args, &example_group_block); end

    # source://rspec-core/3.13.0/lib/rspec/core/dsl.rb#42
    def xdescribe(*args, &example_group_block); end
  end
end

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#7
module RSpec::Mocks; end

# source://rspec-mocks//lib/rspec/mocks/argument_list_matcher.rb#33
class RSpec::Mocks::ArgumentListMatcher
  # source://rspec-mocks//lib/rspec/mocks/argument_list_matcher.rb#45
  def initialize(*expected_args, **_arg1); end

  # source://rspec-mocks//lib/rspec/mocks/argument_list_matcher.rb#58
  def args_match?(*actual_args, **_arg1); end

  # source://rspec-mocks//lib/rspec/mocks/argument_list_matcher.rb#35
  def expected_args; end

  # source://rspec-mocks//lib/rspec/mocks/argument_list_matcher.rb#81
  def resolve_expected_args_based_on(actual_args); end

  private

  # source://rspec-mocks//lib/rspec/mocks/argument_list_matcher.rb#100
  def ensure_expected_args_valid!; end

  # source://rspec-mocks//lib/rspec/mocks/argument_list_matcher.rb#92
  def replace_any_args_with_splat_of_anything(before_count, actual_args_count); end
end

# source://rspec-mocks//lib/rspec/mocks/argument_list_matcher.rb#114
RSpec::Mocks::ArgumentListMatcher::MATCH_ALL = T.let(T.unsafe(nil), RSpec::Mocks::ArgumentListMatcher)

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#16
module RSpec::Mocks::ArgumentMatchers
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#121
  def a_kind_of(klass); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#111
  def an_instance_of(klass); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#26
  def any_args; end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#34
  def anything; end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#100
  def array_excluding(*args); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#90
  def array_including(*args); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#59
  def boolean; end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#51
  def duck_type(*args); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#80
  def hash_excluding(*args); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#70
  def hash_including(*args); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#80
  def hash_not_including(*args); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#111
  def instance_of(klass); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#121
  def kind_of(klass); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#42
  def no_args; end

  class << self
    # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#128
    def anythingize_lonely_keys(*args); end
  end
end

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#159
class RSpec::Mocks::ArgumentMatchers::AnyArgMatcher < ::RSpec::Mocks::ArgumentMatchers::SingletonMatcher
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#160
  def ===(_other); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#164
  def description; end
end

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#147
RSpec::Mocks::ArgumentMatchers::AnyArgMatcher::INSTANCE = T.let(T.unsafe(nil), RSpec::Mocks::ArgumentMatchers::AnyArgMatcher)

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#152
class RSpec::Mocks::ArgumentMatchers::AnyArgsMatcher < ::RSpec::Mocks::ArgumentMatchers::SingletonMatcher
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#153
  def description; end
end

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#147
RSpec::Mocks::ArgumentMatchers::AnyArgsMatcher::INSTANCE = T.let(T.unsafe(nil), RSpec::Mocks::ArgumentMatchers::AnyArgsMatcher)

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#274
class RSpec::Mocks::ArgumentMatchers::ArrayExcludingMatcher
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#275
  def initialize(unexpected); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#279
  def ===(actual); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#292
  def description; end

  private

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#298
  def formatted_unexpected_values; end
end

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#242
class RSpec::Mocks::ArgumentMatchers::ArrayIncludingMatcher
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#243
  def initialize(expected); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#247
  def ===(actual); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#260
  def description; end

  private

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#266
  def formatted_expected_values; end
end

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#188
class RSpec::Mocks::ArgumentMatchers::BaseHashMatcher
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#189
  def initialize(expected); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#193
  def ===(predicate, actual); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#201
  def description(name); end

  private

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#207
  def formatted_expected_hash; end
end

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#177
class RSpec::Mocks::ArgumentMatchers::BooleanMatcher < ::RSpec::Mocks::ArgumentMatchers::SingletonMatcher
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#178
  def ===(value); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#182
  def description; end
end

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#147
RSpec::Mocks::ArgumentMatchers::BooleanMatcher::INSTANCE = T.let(T.unsafe(nil), RSpec::Mocks::ArgumentMatchers::BooleanMatcher)

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#306
class RSpec::Mocks::ArgumentMatchers::DuckTypeMatcher
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#307
  def initialize(*methods_to_respond_to); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#311
  def ===(value); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#315
  def description; end
end

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#231
class RSpec::Mocks::ArgumentMatchers::HashExcludingMatcher < ::RSpec::Mocks::ArgumentMatchers::BaseHashMatcher
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#232
  def ===(actual); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#236
  def description; end
end

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#220
class RSpec::Mocks::ArgumentMatchers::HashIncludingMatcher < ::RSpec::Mocks::ArgumentMatchers::BaseHashMatcher
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#221
  def ===(actual); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#225
  def description; end
end

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#321
class RSpec::Mocks::ArgumentMatchers::InstanceOf
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#322
  def initialize(klass); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#326
  def ===(actual); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#330
  def description; end
end

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#336
class RSpec::Mocks::ArgumentMatchers::KindOf
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#337
  def initialize(klass); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#341
  def ===(actual); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#345
  def description; end
end

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#170
class RSpec::Mocks::ArgumentMatchers::NoArgsMatcher < ::RSpec::Mocks::ArgumentMatchers::SingletonMatcher
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#171
  def description; end
end

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#147
RSpec::Mocks::ArgumentMatchers::NoArgsMatcher::INSTANCE = T.let(T.unsafe(nil), RSpec::Mocks::ArgumentMatchers::NoArgsMatcher)

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#143
class RSpec::Mocks::ArgumentMatchers::SingletonMatcher
  class << self
    # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#146
    def inherited(subklass); end

    private

    def new(*_arg0); end
  end
end
